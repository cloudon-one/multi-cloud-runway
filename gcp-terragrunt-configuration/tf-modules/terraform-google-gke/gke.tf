module "gke" {
  source                             = "terraform-google-modules/kubernetes-engine/google//modules/beta-private-cluster-update-variant"
  version                            = "31.1.0"
  project_id                         = var.project_id
  name                               = var.name
  description                        = var.description
  regional                           = var.regional
  region                             = var.region
  zones                              = var.zones
  kubernetes_version                 = var.kubernetes_version
  network                            = var.network
  network_project_id                 = var.network_project_id
  subnetwork                         = var.subnetwork
  ip_range_pods                      = var.ip_range_pods
  ip_range_services                  = var.ip_range_services
  initial_node_count                 = var.initial_node_count
  remove_default_node_pool           = var.remove_default_node_pool
  disable_legacy_metadata_endpoints  = var.disable_legacy_metadata_endpoints
  create_service_account             = var.create_service_account
  service_account                    = var.service_account
  identity_namespace                 = var.identity_namespace
  enable_private_endpoint            = var.enable_private_endpoint
  enable_private_nodes               = var.enable_private_nodes
  node_metadata                      = var.node_metadata
  master_ipv4_cidr_block             = var.master_ipv4_cidr_block
  default_max_pods_per_node          = var.default_max_pods_per_node
  horizontal_pod_autoscaling         = var.horizontal_pod_autoscaling
  master_authorized_networks         = var.master_authorized_networks
  configure_ip_masq                  = var.configure_ip_masq
  non_masquerade_cidrs               = var.non_masquerade_cidrs
  network_policy                     = var.network_policy
  network_policy_provider            = var.network_policy_provider
  maintenance_start_time             = var.maintenance_start_time
  maintenance_end_time               = var.maintenance_end_time
  maintenance_recurrence             = var.maintenance_recurrence
  enable_pod_security_policy         = var.enable_pod_security_policy
  enable_resource_consumption_export = var.enable_resource_consumption_export
  enable_network_egress_export       = var.enable_network_egress_export
  enable_kubernetes_alpha            = var.enable_kubernetes_alpha
  cluster_autoscaling                = var.cluster_autoscaling
  stub_domains                       = var.stub_domains
  upstream_nameservers               = var.upstream_nameservers
  ip_masq_resync_interval            = var.ip_masq_resync_interval
  ip_masq_link_local                 = var.ip_masq_link_local
  logging_service                    = var.logging_service
  monitoring_service                 = var.monitoring_service
  grant_registry_access              = var.grant_registry_access
  issue_client_certificate           = var.issue_client_certificate
  cluster_ipv4_cidr                  = var.cluster_ipv4_cidr
  cluster_resource_labels            = var.cluster_resource_labels
  deploy_using_private_endpoint      = var.deploy_using_private_endpoint
  master_global_access_enabled       = var.master_global_access_enabled
  http_load_balancing                = var.http_load_balancing
  istio                              = var.istio
  istio_auth                         = var.istio_auth
  dns_cache                          = var.dns_cache
  gce_pd_csi_driver                  = var.gce_pd_csi_driver
  kalm_config                        = var.kalm_config
  config_connector                   = var.config_connector
  database_encryption                = local.database_encryption
  cloudrun                           = var.cloudrun
  enable_binary_authorization        = var.enable_binary_authorization
  sandbox_enabled                    = var.sandbox_enabled
  enable_intranode_visibility        = var.enable_intranode_visibility
  enable_vertical_pod_autoscaling    = var.enable_vertical_pod_autoscaling
  authenticator_security_group       = var.authenticator_security_group
  release_channel                    = var.release_channel
  enable_shielded_nodes              = var.enable_shielded_nodes
  add_cluster_firewall_rules         = var.add_cluster_firewall_rules
  firewall_priority                  = var.firewall_priority
  firewall_inbound_ports             = var.firewall_inbound_ports
  disable_default_snat               = var.disable_default_snat
  node_pools                         = var.node_pools
  node_pools_labels                  = var.node_pools_labels
  node_pools_metadata                = var.node_pools_metadata
  node_pools_taints                  = var.node_pools_taints
  node_pools_tags                    = var.node_pools_tags
  node_pools_oauth_scopes            = var.node_pools_oauth_scopes
  depends_on = [
    module.gke-k8s-iam
  ]
}

resource "google_compute_network_peering_routes_config" "peering_gke_routes" {
  count   = var.modify_gke_peer ? 1 : 0
  project = var.network_project_id
  peering = module.gke.peering_name
  network = var.network

  import_custom_routes = true
  export_custom_routes = true
}
